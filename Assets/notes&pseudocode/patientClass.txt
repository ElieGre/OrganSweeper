//variables
List<string> organs = new List<string>() {heart, lungs, kidney, liver, apendix, pancreas, intestines, bladder};
List<string> organsHealthy = new List<string>();
List<string> organsBad = new List<string>();
List<string> organsMissing = new List<string>();
bool isStable;
int blood;
int age;

private void Start()
{
    AgeSetup();
    OrganSetup();
    BloodSetup();
}

private void AgeSetup()
{
    age = random.range(1,100);
}

//generates no. from 1-3, randomly assigns that amount of organs to organsBad and assigns remaining organs to organsHealthy 
private void OrganSetup()
{
    int problems = random.range(1,3);
    for(int x=0;x<problems;x++)
    {
	int randomOrgan = random.range(0, organsHealthy.count);
        organsBad.Add(organs[randomOrgan]);
	organs.RemoveAt(randomOrgan);
    }
    organsHealthy = organs;
}

// gives patient 80-100 blood (health) based on age
private void BloodSetup()
{
    if(age > 60)
    {
        blood = 90;
    }
    else if(age > 80)
    {
        blood = 80;
    }         
    else
    {
        blood = 100;
    }

}

// finds organ parameter in organsHealthy and moves it to organsMissing
public void RemoveOrgan(string organ)
{
    organsMissing.Add(organ);
    organsHealthy.RemoveAt(organsHealthy.IndexOf(organ));
    playerManager.SetInv(organ);
}

// finds organ parameter in organsBad and moves it to Healthy
public void ReplaceOrgan(string organ)
{
    organsHealthy.Add(organ);
    organsBad.RemoveAt(organsBad.IndexOf(organ));
    playerManager.RemoveInv()
}

// removes 10 blood and gives the player a blood pack
public void DonateBlood()
{
    if(blood>20)
    {
        blood -= 10;
        playerManager.SetOrgan(bloodPack);
    } 
}